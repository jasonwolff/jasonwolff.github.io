{"version":3,"sources":["hooks/useImageLoc.ts","utils/Image.tsx","utils/ActionButton.tsx","utils/Actions.tsx","segments/Banner.tsx","segments/Spotlight.tsx","segments/Contact.tsx","utils/GalleryItem.tsx","segments/Gallery.tsx","Assembler.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["IMAGE_DIR","Image","props","filename","alttext","imageUri","useImageLoc","imageAlt","className","src","alt","ActionButton","text","link","buttonClasses","emphasis","join","href","Actions","orientation","buttons","stacked","map","btn","Banner","title","subtitle","description","actions","image","flip","type","bannerClasses","id","Spotlight","spotlightClasses","Contact","formspree","dark","contactClasses","style","width","height","backgroundImage","method","action","htmlFor","name","rows","value","GalleryItem","undefined","Gallery","items","paddingBottom","item","Assembler","useState","content","setContent","useEffect","fetch","then","res","json","seg","generateSegment","App","html5upRender","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oMAAMA,EAAoB,iBCM1B,IAaeC,EAbsB,SAACC,GAAwB,IACpDC,EAAsBD,EAAtBC,SAAUC,EAAYF,EAAZE,QAEZC,EDPD,SAAqBF,GAC1B,OAAOH,EAAYG,ECMFG,CAAYH,GACvBI,EAAWH,GAAW,GAE5B,OACE,yBAAKI,UAAU,SACb,yBAAKC,IAAKJ,EAAUK,IAAKH,MCShBI,EAlBoC,SAACT,GAA+B,IACzEU,EAAyBV,EAAzBU,KAAMC,EAAmBX,EAAnBW,KAERC,EAAgB,CACpB,SAH+BZ,EAAba,SAIP,UAAY,GACvB,OACA,wBACAC,KAAK,KACP,OACE,4BACE,uBAAGC,KAAMJ,EAAML,UAAWM,GACvBF,KCAMM,EAX0B,SAAChB,GAA0B,IAC1DiB,EAAyBjB,EAAzBiB,YAAaC,EAAYlB,EAAZkB,QACfC,EAA0B,aAAhBF,EAA6B,UAAY,GAEzD,OACE,wBAAIX,UAAW,eAAiBa,GAC7BD,GAAWA,EAAQE,KAAI,SAACC,GAAD,OAA2B,kBAAC,EAAiBA,QCsB5DC,EA3BwB,SAACtB,GAAyB,IACvDuB,EAA6DvB,EAA7DuB,MAAOC,EAAsDxB,EAAtDwB,SAAUC,EAA4CzB,EAA5CyB,YAAaC,EAA+B1B,EAA/B0B,QAASC,EAAsB3B,EAAtB2B,MAAOC,EAAe5B,EAAf4B,KAAMC,EAAS7B,EAAT6B,KAEtDC,EAAgB,CACpB,SACA,SACAF,EAAO,eAAiB,cACxB,qBACA,wBACA,aACA,uBACA,6BACAd,KAAK,KAEP,OACE,6BAASiB,GAAIF,EAAMvB,UAAWwB,GAC5B,yBAAKxB,UAAU,WACZiB,GAAS,4BAAKA,GACdC,GAAY,uBAAGlB,UAAU,SAASkB,GAClCC,GAAe,2BAAIA,GACnBC,GAAW,kBAAC,EAAYA,IAE1BC,GAAS,kBAAC,EAAUA,KCEZK,EAxB8B,SAAChC,GAA4B,IAChEuB,EAAmDvB,EAAnDuB,MAAOE,EAA4CzB,EAA5CyB,YAAaC,EAA+B1B,EAA/B0B,QAASC,EAAsB3B,EAAtB2B,MAAOC,EAAe5B,EAAf4B,KAAMC,EAAS7B,EAAT6B,KAE5CI,EAAmB,CACvB,YACA,SACAL,EAAO,eAAiB,cACxB,qBACA,wBACA,0BACAd,KAAK,KAEP,OACE,6BAASR,UAAW2B,EAAkBF,GAAIF,GACxC,yBAAKvB,UAAU,WACZiB,GAAS,4BAAKA,GACdE,GAAe,2BAAIA,GACnBC,GAAW,kBAAC,EAAYA,IAE1BC,GAAS,kBAAC,EAAUA,KCoCZO,EAzD0B,SAAClC,GAA0B,IAC1DmC,EAA0BnC,EAA1BmC,UAAWC,EAAepC,EAAfoC,KAAMP,EAAS7B,EAAT6B,KAEnBQ,EAAiB,CACrB,UACAD,EAAO,gBAAkB,GACzB,SACA,gBACAtB,KAAK,KAEP,OACE,6BAASiB,GAAIF,EAAMvB,UAAW+B,GAC5B,yBACEC,MAAO,CACLC,MAAO,QACPC,OAAQ,GACRC,gBACE,gEAGN,yBAAKnC,UAAU,gBACb,gCACE,8CAEF,yBAAKA,UAAU,WACb,0BAAMoC,OAAO,OAAOC,OAAQR,GAC1B,yBAAK7B,UAAU,UACb,yBAAKA,UAAU,cACb,2BAAOsC,QAAQ,QAAf,QACA,2BAAOf,KAAK,OAAOgB,KAAK,OAAOd,GAAG,UAEpC,yBAAKzB,UAAU,cACb,2BAAOsC,QAAQ,SAAf,SACA,2BAAOf,KAAK,QAAQgB,KAAK,WAAWd,GAAG,WAEzC,yBAAKzB,UAAU,SACb,2BAAOsC,QAAQ,WAAf,WACA,8BAAUC,KAAK,UAAUd,GAAG,UAAUe,KAAM,MAGhD,wBAAIxC,UAAU,WACZ,4BACE,2BACEuB,KAAK,SACLgB,KAAK,SACLd,GAAG,SACHgB,MAAM,wBCZTC,EAjCkC,SAAChD,GAA8B,IACtEuB,EAAsCvB,EAAtCuB,MAAOE,EAA+BzB,EAA/ByB,YAAakB,EAAkB3C,EAAlB2C,OAAQhB,EAAU3B,EAAV2B,MAEpC,OACE,iCACGA,GACC,uBAAGZ,KAAM4B,EAASA,EAAOhC,UAAOsC,EAAW3C,UAAU,SACnD,kBAAC,EAAUqB,IAGf,yBAAKrB,UAAU,WACZiB,GAAS,4BAAKA,GACdE,GAAe,2BAAIA,GACnBkB,GACC,wBAAIrC,UAAU,iBACZ,4BACE,0BACEA,UAAW,CACT,SACA,QACAqC,EAAO9B,SAAW,UAAY,IAC9BC,KAAK,MAEN6B,EAAOjC,WCFTwC,EApB0B,SAAClD,GAA0B,IAC1DuB,EAAuBvB,EAAvBuB,MAAO4B,EAAgBnD,EAAhBmD,MAAOtB,EAAS7B,EAAT6B,KACtB,OACE,6BAASvB,UAAU,8BAA8ByB,GAAIF,GAClDN,GACC,yBAAKjB,UAAU,QAAQgC,MAAO,CAAEc,cAAe,KAC7C,4BAAK7B,IAGR4B,GACC,yBAAK7C,UAAU,kDACZ6C,EAAM/B,KAAI,SAACiC,GAAD,OACT,kBAAC,EAAgBA,SCG7B,IAYeC,EAZ8B,SAACtD,GAA4B,IAAD,EACzCuD,mBAAkB,IADuB,mBAChEC,EADgE,KACvDC,EADuD,KASvE,OANAC,qBAAU,WACRC,MAAM,gBACHC,MAAK,SAACC,GAAD,OAAmBA,EAAIC,UAC5BF,MAAK,SAACJ,GAAD,OAAsBC,EAAWD,QACxC,IAEI,oCAAIA,EAAoBpC,KAAI,SAAC2C,GAAD,OAtBrC,SAAyBA,GACvB,OAAQA,EAAIlC,MACV,IAAK,SACH,OAAO,kBAAC,EAAWkC,GACrB,IAAK,YACH,OAAO,kBAAC,EAAcA,GACxB,IAAK,UACH,OAAO,kBAAC,EAAYA,GACtB,IAAK,UACH,OAAO,kBAAC,EAAYA,IAaiCC,CAAgBD,QCjB5DE,EATO,WAEpB,OADAP,qBAAU,kBAAMQ,mBAEd,yBAAKnC,GAAG,UAAUzB,UAAU,WAC1B,kBAAC,EAAD,QCGc6D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDsI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlB,MAAK,SAAAmB,GACjCA,EAAaC,kB","file":"static/js/main.78ce2fe5.chunk.js","sourcesContent":["const IMAGE_DIR: string = \"assets/images/\";\n\nexport function useImageLoc(filename: string) {\n  return IMAGE_DIR + filename;\n}\n","import React from \"react\";\nimport { ImageUtil } from \"../types/Utils\";\nimport { useImageLoc } from \"../hooks/useImageLoc\";\n\nexport interface IImageProps extends ImageUtil {}\n\nconst Image: React.FC<IImageProps> = (props: IImageProps) => {\n  const { filename, alttext } = props;\n\n  const imageUri = useImageLoc(filename);\n  const imageAlt = alttext || \"\";\n\n  return (\n    <div className=\"image\">\n      <img src={imageUri} alt={imageAlt} />\n    </div>\n  );\n};\n\nexport default Image;\n","import React from \"react\";\nimport { ActionButtonUtil } from \"../types/Utils\";\n\nexport interface IActionButtonProps extends ActionButtonUtil {}\n\nconst ActionButton: React.FC<IActionButtonProps> = (props: IActionButtonProps) => {\n  const { text, link, emphasis } = props;\n\n  const buttonClasses = [\n    \"button\",\n    emphasis ? \"primary\" : \"\",\n    \"wide\",\n    \"smooth-scroll-middle\"\n  ].join(\" \");\n  return (\n    <li>\n      <a href={link} className={buttonClasses}>\n        {text}\n      </a>\n    </li>\n  );\n};\n\nexport default ActionButton;\n","import React from \"react\";\nimport { ActionsUtil, ActionButtonUtil } from \"../types/Utils\";\nimport ActionButton from \"./ActionButton\";\n\nexport interface IActionsProps extends Partial<ActionsUtil> {}\n\nconst Actions: React.FC<IActionsProps> = (props: IActionsProps) => {\n  const { orientation, buttons } = props;\n  const stacked = orientation === \"vertical\" ? \"stacked\" : \"\";\n\n  return (\n    <ul className={\"actions fit \" + stacked}>\n      {buttons && buttons.map((btn: ActionButtonUtil) => <ActionButton {...btn} />)}\n    </ul>\n  );\n};\n\nexport default Actions;\n","import React from \"react\";\nimport { BannerSegment } from \"../types/Segments\";\nimport Image from \"../utils/Image\";\nimport Actions from \"../utils/Actions\";\n\nexport interface IBannerProps extends Partial<BannerSegment> {}\n\nconst Banner: React.FC<IBannerProps> = (props: IBannerProps) => {\n  const { title, subtitle, description, actions, image, flip, type } = props;\n\n  const bannerClasses = [\n    \"banner\",\n    \"style1\",\n    flip ? \"orient-right\" : \"orient-left\",\n    \"content-align-left\",\n    \"image-position-center\",\n    \"fullscreen\",\n    \"onload-image-fade-in\",\n    \"onload-content-fade-right\"\n  ].join(\" \");\n\n  return (\n    <section id={type} className={bannerClasses}>\n      <div className=\"content\">\n        {title && <h1>{title}</h1>}\n        {subtitle && <p className=\"major\">{subtitle}</p>}\n        {description && <p>{description}</p>}\n        {actions && <Actions {...actions} />}\n      </div>\n      {image && <Image {...image} />}\n    </section>\n  );\n};\n\nexport default Banner;\n","import React from \"react\";\nimport { SpotlightSegment } from \"../types/Segments\";\nimport Image from \"../utils/Image\";\nimport Actions from \"../utils/Actions\";\n\nexport interface ISpotlightProps extends Partial<SpotlightSegment> {}\n\nconst Spotlight: React.FC<ISpotlightProps> = (props: ISpotlightProps) => {\n  const { title, description, actions, image, flip, type } = props;\n\n  const spotlightClasses = [\n    \"spotlight\",\n    \"style1\",\n    flip ? \"orient-right\" : \"orient-left\",\n    \"content-align-left\",\n    \"image-position-center\",\n    \"onscroll-image-fade-in\"\n  ].join(\" \");\n\n  return (\n    <section className={spotlightClasses} id={type}>\n      <div className=\"content\">\n        {title && <h2>{title}</h2>}\n        {description && <p>{description}</p>}\n        {actions && <Actions {...actions} />}\n      </div>\n      {image && <Image {...image} />}\n    </section>\n  );\n};\n\nexport default Spotlight;\n","import React from \"react\";\nimport { ContactSegment } from \"../types/Segments\";\n\nexport interface IContactProps extends Partial<ContactSegment> {}\n\nconst Contact: React.FC<IContactProps> = (props: IContactProps) => {\n  const { formspree, dark, type } = props;\n\n  const contactClasses = [\n    \"wrapper\",\n    dark ? \"invert color1\" : \"\",\n    \"style1\",\n    \"align-center\"\n  ].join(\" \");\n\n  return (\n    <section id={type} className={contactClasses}>\n      <div\n        style={{\n          width: \"100vw\",\n          height: 10,\n          backgroundImage:\n            \"linear-gradient(to bottom, rgba(0,0,0,0.3), rgba(0,0,0,0))\"\n        }}\n      />\n      <div className=\"inner medium\">\n        <header>\n          <h2>Contact Jason</h2>\n        </header>\n        <div className=\"content\">\n          <form method=\"post\" action={formspree}>\n            <div className=\"fields\">\n              <div className=\"field half\">\n                <label htmlFor=\"name\">Name</label>\n                <input type=\"text\" name=\"name\" id=\"name\" />\n              </div>\n              <div className=\"field half\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" name=\"_replyto\" id=\"email\" />\n              </div>\n              <div className=\"field\">\n                <label htmlFor=\"message\">Message</label>\n                <textarea name=\"message\" id=\"message\" rows={6}></textarea>\n              </div>\n            </div>\n            <ul className=\"actions\">\n              <li>\n                <input\n                  type=\"submit\"\n                  name=\"submit\"\n                  id=\"submit\"\n                  value=\"Send Message\"\n                />\n              </li>\n            </ul>\n          </form>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport { GalleryItemUtil } from \"../types/Utils\";\nimport Image from \"./Image\";\n\nexport interface IGalleryItemProps extends Partial<GalleryItemUtil> {}\n\nconst GalleryItem: React.FC<IGalleryItemProps> = (props: IGalleryItemProps) => {\n  const { title, description, action, image } = props;\n\n  return (\n    <article>\n      {image && (\n        <a href={action ? action.link : undefined} className=\"image\">\n          <Image {...image} />\n        </a>\n      )}\n      <div className=\"caption\">\n        {title && <h3>{title}</h3>}\n        {description && <p>{description}</p>}\n        {action && (\n          <ul className=\"actions fixed\">\n            <li>\n              <span\n                className={[\n                  \"button\",\n                  \"small\",\n                  action.emphasis ? \"primary\" : \"\"\n                ].join(\" \")}\n              >\n                {action.text}\n              </span>\n            </li>\n          </ul>\n        )}\n      </div>\n    </article>\n  );\n};\n\nexport default GalleryItem;\n","import React from \"react\";\nimport { GallerySegment } from \"../types/Segments\";\nimport { GalleryItemUtil } from \"../types/Utils\";\nimport GalleryItem from \"../utils/GalleryItem\";\n\nexport interface IGalleryProps extends Partial<GallerySegment> {}\n\nconst Gallery: React.FC<IGalleryProps> = (props: IGalleryProps) => {\n  const { title, items, type } = props;\n  return (\n    <section className=\"wrapper style1 align-center\" id={type}>\n      {title && (\n        <div className=\"inner\" style={{ paddingBottom: 10 }}>\n          <h2>{title}</h2>\n        </div>\n      )}\n      {items && (\n        <div className=\"gallery style2 small lightbox onscroll-fade-in\">\n          {items.map((item: GalleryItemUtil) => (\n            <GalleryItem {...item} />\n          ))}\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default Gallery;\n","import React, { useEffect, useState } from \"react\";\nimport { Content, HTMLSegment } from \"./types/Segments\";\nimport Banner from \"./segments/Banner\";\nimport Spotlight from \"./segments/Spotlight\";\nimport Contact from \"./segments/Contact\";\nimport Gallery from \"./segments/Gallery\";\n\nexport interface IAssemblerProps {}\n\nfunction generateSegment(seg: HTMLSegment) {\n  switch (seg.type) {\n    case \"banner\":\n      return <Banner {...seg} />;\n    case \"spotlight\":\n      return <Spotlight {...seg} />;\n    case \"gallery\":\n      return <Gallery {...seg} />;\n    case \"contact\":\n      return <Contact {...seg} />;\n  }\n}\n\nconst Assembler: React.FC<IAssemblerProps> = (props: IAssemblerProps) => {\n  const [content, setContent] = useState<Content>([] as Content);\n\n  useEffect(() => {\n    fetch(\"content.json\")\n      .then((res: Response) => res.json())\n      .then((content: Content) => setContent(content));\n  }, []);\n\n  return <>{(content as Content).map((seg: HTMLSegment) => generateSegment(seg))}</>;\n};\n\nexport default Assembler;\n","import React, { useEffect } from \"react\";\nimport Assembler from \"./Assembler\";\n\ndeclare var html5upRender: Function;\n\nconst App: React.FC = () => {\n  useEffect(() => html5upRender());\n  return (\n    <div id=\"wrapper\" className=\"divided\">\n      <Assembler />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}